<style lang="less">
  .container {
    padding: 20rpx;
    font-size: 14px;
    color: #333;
    height: 100%;
    box-sizing: border-box;
    text-align: justify;
  }
  .ellipsis{
    display: inline-block;
    white-space: nowrap; 
    width: 100%; 
    overflow: hidden;
    text-overflow:ellipsis;
  }
  .tip{
    margin: 60rpx 0;
    text-align: center;
    .warning{
      padding: 10rpx 30rpx;
      display: inline;
      background-color: #f5f5f5;
      border-radius: 30rpx;
    }
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  export default class extends wepy.app {
    config = {
      pages: [
        'pages/home/index',
        'pages/home/bookDetail',
        'pages/home/chapter',
        'pages/home/search',
        'pages/circle/index',
        'pages/circle/detail',
        'pages/user/index'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: 'WeChat',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        color: '#cdcdcd',
        selectedColor: '#8a8a8a',
        backgroundColor: '#fff',
        borderStyle: 'black',
        list: [{
          pagePath: 'pages/home/index',
          text: '首页',
          'iconPath': 'images/home.png',
          'selectedIconPath': 'images/homeSelected.png'
        }, {
          pagePath: 'pages/circle/index',
          text: '畅想圈',
          'iconPath': 'images/circle.png',
          'selectedIconPath': 'images/circleSelected.png'
        }, {
          pagePath: 'pages/user/index',
          text: '我的',
          'iconPath': 'images/user.png',
          'selectedIconPath': 'images/userSelected.png'
        }]
      }
    }
    globalData = {
      userInfo: null
    }
    constructor() {
      super()
      this.use('requestfix')
    }
    onLaunch() {
      this.testAsync()
      this.getUserInfo()
    }
    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }
    async testAsync() {
      const data = await this.sleep(3)
      console.log(data)
    }
    getUserInfo(cb) {
      const that = this
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo
          cb && cb(res.userInfo)
          console.log(that.globalData.userInfo)
        }
      })
    }
  }
</script>
